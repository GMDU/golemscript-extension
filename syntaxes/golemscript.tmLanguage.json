{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"scopeName": "source.glm",
	"name": "GolemScript",
	"patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#resources"
    },
    {
      "include": "#booleans"
    },
    {
      "include": "#regexps"
    },
		{
			"include": "#statements"
		},
		{
			"include": "#object_keys"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#variables"
		}
	],
	"repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.hash.golemscript",
          "match": "#.*"
        }
      ]
    },
    "unknown": {
      "patterns": [
        {
          "name": "meta.unknown.golemscript",
          "match": "^(.*)$",
          "captures": {
            "1": {
              "name": "invalid.illegal.golemscript"
            }
          }
        }
      ]
    },
    "statements": {
      "patterns": [
        {
          "include": "#keywords"
        }
      ]
    },
		"keywords": {
      "patterns": [
        {
          "name": "keyword.control.golemscript",
          "match": "\\b(if|while|loop|break|next|return|end)\\b"
        },
        {
          "name": "keyword.golemscript",
          "match": "\\b(let|var|const|func)\\b"
        }
      ]
      },
      "instruction_names": {
        "patterns": [{
				"name": "keyword.golemscript",
				"match": "\\b(move|place|getblock|print|sleep|match)\\b"
			}]
		},
		"strings": {
			"name": "string.quoted.double.golemscript",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.golemscript",
					"match": "\\\\."
				}
			]
		},
    "resources": {
			"patterns": [
				{
					"name": "constant.language.symbol.golemscript",
					"match": "(\\b[A-Za-z_]\\w*)?\\:\\b[A-Za-z_]\\w*"
				}
			]
		},
    "booleans": {
			"patterns": [
				{
					"name": "constant.language.symbol.golemscript",
					"match": "\\b(true|false)\\b"
				}
			]
		},
    "regexps": {
			"name": "string.regexp.golemscript",
			"begin": "/",
			"end": "/",
			"patterns": [
				{
					"name": "constant.character.escape.golemscript",
					"match": "\\\\."
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.golemscript",
					"match": "\\b\\d+\\b"
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"include": "#variable_declarations"
				},
        {
					"include": "#constant_declarations"
				},
        {
          "include": "#function_calls"
        },
        {
					"include": "#variable_references"
				}
			]
		},
		"variable_references": {
			"patterns": [
				{
					"name": "variable.other.readwrite.golemscript",
					"match": "\\b[A-Za-z]\\w*\\b"
				}
			]
		},
    "function_calls": {
			"patterns": [
				{
					"name": "entity.name.function.golemscript",
					"match": "\\b[A-Za-z]\\w*\\b\\s*(?:\\()"
				}
			]
		},
		"variable_declarations": {
			"patterns": [
				{
					"name": "variable.other.readwrite.golemscript",
					"match": "(?<=var\\s+)\\w+"
				}
			]
		},
    "constant_declarations": {
			"patterns": [
				{
					"name": "variable.other.constant.golemscript",
					"match": "(?<=const\\s+)\\w+"
				}
			]
		},
		"object_keys": {
			"patterns": [
				{
					"name": "variable.other.property.golemscript",
					"match": "\\w+(?=:)"
				}
			]
		}
	}
}